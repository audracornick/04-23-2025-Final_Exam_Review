---
title: "My Tutorial"
format: 
  html:
    self-contained: true
output-dir: docs
---

# Introduction

In this tutorial, we refactored the code into separate scripts corresponding to each section. The dataset comes from the `palmerpenguins` package, which contains measurements of penguins from three species. All results shown below are generated from scripts and saved outputs.

## Load Libraries and Data
```{r}
#| echo: false
#| message: false
#| warning: false
#| results: "hide"

library(tidyverse)
library(palmerpenguins)
library(tidymodels)
library(knitr)
```

We used the `palmerpenguins`, `tidyverse`, and `tidymodels` packages.  
Initial data cleaning (e.g., removing `NA` values) was handled in the scripts.

To inspect the data structure:

```{r}
#| echo: false

glimpse_data <- read.delim("../results/data_glimpse.txt", sep ="\t", header = TRUE)
kable(glimpse_data)

```

# Methods

In this section, we perform exploratory data analysis (EDA) and prepare the data for modeling.

```{r}
#| echo: false

summary_stats <- read.delim("../results/summary_statistics.txt", sep = "\t", header = TRUE)
kable(summary_stats)

```

![Bill Length Boxplot](../results/boxplot_bill_length.png){width=75% #fig-confmat}

# Model

We will fit a classification model using `tidymodels` to predict the species of a penguin based on its physical characteristics.

# Results

We evaluate the performance of the model using the test dataset.

![Confusion Matrix for our model](../results/confusion_matrix.png){width=75% #fig-confmat}

# Conclusion

In this tutorial, we:

- Loaded and cleaned the `palmerpenguins` dataset.
- Performed exploratory data analysis.
- Built a k-Nearest Neighbors classification model using `tidymodels`.
- Evaluated the model's performance.